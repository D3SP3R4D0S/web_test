<div class="my-5">
    <h1 class="text-center mb-5">게시글</h1>
    <div class="row">
        <div class="col"></div>
        <div class="col text-end mb-5">
            <button id="btn-insert" class="btn btn-primary">글쓰기</button>
        </div>
        <hr>
        <div id="div-posts"></div>
    </div>
</div>
<script id="temp-posts" type="x-handlebars-templates">
    <table class="table table-hover">
        <thead>
            <tr class="bg-dark text-white fw-bold">
                <th>Title</th>
                <th>E-mail</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            {{#each .}}
                <tr>
                    <td>{{title}}</td>
                    <td>{{email}}</td>
                    <td>{{date}}</td>
                </tr>
            {{/each}}
        </tbody>
    </table>
</script>
<script type="module">
    import { app } from "/javascripts/firebaseInit.js";
    import { getFirestore,collection } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-firestore.js";
    import { query,orderBy,getDocs,where,doc } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-firestore.js";
    const db = getFirestore(app);
    const email=sessionStorage.getItem('email');

    let page=1;
    let size=3;
    let last=1;

    //게시글 목록
    getPosts();
    async function getPosts() {
        const q = query(collection(db, 'posts'), orderBy("date", "desc"));
        const snapshot = await getDocs(q);
        //console.log(snapshot.docs);
        let rows=[];
        let total=snapshot.docs.length;
        last = Math.ceil(total/size);
        $("#total").html(total);

        await snapshot.docs.forEach(async(row, index)=>{
            //console.log(row.id, row.data());
            const start = (page-1)*size;
            const end = (page*size)-1;
            if(index>=start && index<=end){
                rows.push({id:row.id, ...row.data()});
            }
        });
        //console.log(rows);
        const temp=Handlebars.compile($("#temp-posts").html());
        $("#div-posts").html(temp(rows));
        if(total > size) {
            $("#span-page").html(`${page} / ${last}`);
            $("#span-page").show();
            if(page==1) {
                $("#btn-prev").attr("disabled", true);
            }else{
                $("#btn-prev").attr("disabled", false);
            }
            if(page==last) {
                $("#btn-next").attr("disabled", true);
            }else{
                $("#btn-next").attr("disabled", false);
            }
        }else{
            $("#pagination").hide();
        }
    }

    $("#btn-insert").on("click", function(){
        if(sessionStorage.getItem("uid")) {
            location.href='/posts/insert';
        }else{
            sessionStorage.setItem("target", "/posts/insert");
            location.href="/users/login";
        }
    });

    $("#btn-next").on("click", function(){
        page++;
        getPosts();
    });


    $("#btn-prev").on("click", function(){
        page--;
        getPosts();
    });
</script>